openapi: 3.0.0
info:
  description: This API allows playing a text-based adventure game called Katacombs
  version: 1.0.0
  title: Katacombs API
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: /
tags:
  - name: Game
    description: Start and Quit a game, help and list active players
  - name: Player
    description: Interact with the game as a player
paths:
  /game/player:
    post:
      tags:
        - Game
      summary: Start a new game
      description: Start a new game with a new player
      operationId: startGame
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Player"
      responses:
        "201":
          description: Game started successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Player"
    get:
      tags:
        - Game
      summary: list active players
      description: Returns a list of active players in the game
      operationId: listPlayers
      responses:
        "200":
          description: list of players
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOfPlayers"
  /game/{playerSid}:
    delete:
      tags:
        - Game
      summary: Quit Game
      description: By removing the player she quits the game
      operationId: quitGame
      parameters:
        - in: path
          name: playerSid
          description: Player unique identification
          required: true
          schema:
            $ref: "#/components/schemas/Sid"
      responses:
        "200":
          description: Game finished successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Game Over"
        "404":
          description: Player with Sid playerSid not found
  /player/items/{itemSid}:
    get:
      tags:
        - Player
      summary: Inspect item
      description: Returns more detailed information about an item
      operationId: getItemDescription
      parameters:
        - in: path
          name: itemSid
          required: true
          schema:
            $ref: "#/components/schemas/Sid"
      responses:
        "200":
          description: Item description
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        "404":
          description: Item with Sid not found
  /player/{playerSid}/bag:
    get:
      tags:
        - Player
      summary: Bag content
      description: Returns the current list of items in player's bag
      operationId: getBag
      parameters:
        - in: path
          name: playerSid
          description: Player unique identification
          required: true
          schema:
            $ref: "#/components/schemas/Sid"
      responses:
        "200":
          description: Bag content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bag"
        "404":
          description: Player with Sid playerSid not found
  /player/{playerSid}/item/{itemSid}/use/{action}:
    put:
      tags:
        - Player
      summary: Use an item
      description: ""
      operationId: useItem
      parameters:
        - in: path
          name: playerSid
          description: Player unique identification
          required: true
          schema:
            $ref: "#/components/schemas/Sid"
        - in: path
          name: itemSid
          required: true
          schema:
            $ref: "#/components/schemas/Sid"
        - in: path
          name: action
          required: true
          schema:
            $ref: "#/components/schemas/Action"
      responses:
        "200":
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Action completed successfully"
        "404":
          description: Player or Item with Sid playerSid not found
        "405":
          description: Action not available for specified item
  /player/{playerSid}/item/{itemSid}/take:
    put:
      tags:
        - Player
      summary: Take an item
      description: Pick up an item from the current location and add it to player's bag
      operationId: takeItem
      parameters:
        - in: path
          name: playerSid
          description: Player unique identification
          required: true
          schema:
            $ref: "#/components/schemas/Sid"
        - in: path
          name: itemSid
          description: Item to take
          required: true
          schema:
            $ref: "#/components/schemas/Sid"
      responses:
        "200":
          description: Item taken successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Item taken successfully"
        "404":
          description: Player or Item not found
        "409":
          description: Item cannot be taken (not in current location or bag is full)
  /player/{playerSid}/location:
    get:
      tags:
        - Player
      summary: Player location description
      description: >-
        Returns information about a location, including exits and items present
        at the location
      operationId: lookAround
      parameters:
        - in: path
          name: playerSid
          description: Player unique identification
          required: true
          schema:
            $ref: "#/components/schemas/Sid"
      responses:
        "200":
          description: Room description
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
        "404":
          description: Player with Sid playerSid not found
  /player/{playerSid}/look/{direction}:
    get:
      tags:
        - Player
      summary: Look at specific direction
      description: Returns information about a location in a specific direction
      operationId: getDirectionDescription
      parameters:
        - in: path
          name: playerSid
          description: Player unique identification
          required: true
          schema:
            $ref: "#/components/schemas/Sid"
        - in: path
          name: direction
          required: true
          schema:
            $ref: "#/components/schemas/Direction"
      responses:
        "200":
          description: Location description for a direction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
              example:
                description: You are in the basement
                items:
                  item1:
                    uri: item/00-0000-0000-0001
                  item2:
                    uri: item/00-0000-0000-0002
        "404":
          description: Player with Sid playerSid not found
  /player/{playerSid}/move/{direction}:
    put:
      tags:
        - Player
      summary: Move
      description: Move in specified direction
      operationId: move
      parameters:
        - in: path
          name: playerSid
          description: Player unique identification
          required: true
          schema:
            $ref: "#/components/schemas/Sid"
        - in: path
          name: direction
          required: true
          schema:
            $ref: "#/components/schemas/Direction"
      responses:
        "200":
          description: Moved in requested direction
        "405":
          description: Cannot move in requested direction
components:
  schemas:
    Action:
      description: Item actions
      type: string
      enum:
        - open
        - close
        - pick
        - drop
        - use
    Bag:
      description: Bag content
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item"
    Direction:
      description: Directions to move
      type: string
      enum:
        - north
        - south
        - east
        - west
        - up
        - down
    Help:
      description: List of game commands
      type: object
      properties:
        commands:
          type: array
          items:
            type: string
    Item:
      description: Item type
      type: object
      properties:
        sid:
          $ref: "#/components/schemas/Sid"
        name:
          type: string
        description:
          type: string
        actions:
          type: array
          items:
            $ref: "#/components/schemas/Action"
    ListOfPlayers:
      description: Player list type
      type: array
      items:
        $ref: "#/components/schemas/Player"
    Location:
      description: Location type
      type: object
      properties:
        description:
          type: string
        exits:
          type: array
          items:
            $ref: "#/components/schemas/Direction"
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item"
    Player:
      description: Player information and current game state
      type: object
      required:
        - sid
        - name
        - location
        - bag
      properties:
        sid:
          $ref: "#/components/schemas/Sid"
        name:
          type: string
          minLength: 1
          maxLength: 50
          example: "Pedro"
        location:
          $ref: "#/components/schemas/Location"
        bag:
          $ref: "#/components/schemas/Bag"
    Sid:
      description: Unique identifier for game entities
      type: string
      pattern: "^[0-9]{6}-[0-9]{12}-[00-9]{8}$"
      example: "001001-999199919878-99989798"
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
      required:
        - code
        - message
